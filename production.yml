version: '3.8'

# Define services
services:
  database:
    container_name: "database"
    image: postgres:14-alpine
    ports:
      - ${DB_PORT}:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    networks:
      - fullstack
    volumes:
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
  redis:
    container_name: "redis"
    image: redis:alpine
    command: redis-server /usr/local/etc/redis/redis.conf --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - fullstack
  rabbitmq:
    container_name: "rabbitmq"
    image: rabbitmq:3-management-alpine
    networks:
      - fullstack
    volumes:
      - ./rabbit-mq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 15s
      retries: 5
  api:
    container_name: "api"
    build: .
    environment:
      # postgres
      - DB_HOST=database
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DATABASE_URL=${DATABASE_URL}
      # Redis
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      # api
      - PORT=${PORT}
      - JWT_SECRET=${JWT_SECRET}
      # AWS S3
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
    ports:
      - ${PORT}:8000
    depends_on:
      - database
      - redis
      - caddy
    networks:
      - fullstack
    env_file:
      - .env
  caddy:
    container_name: "caddy"
    image: caddy:2.4.3-alpine
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    ports:
      - ${CADDY_PORT}:80
    networks:
      - fullstack
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
# Define volumes
volumes:
  database_postgres:

# Define networks
networks:
  fullstack:
    driver: bridge